@page "/Personale"
@using Gestionale.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db
@inject NavigationManager Navigator
@inject IJSRuntime js
@code{
    Gestionale.Data.Control.DipendenteDbService personaleService = new Data.Control.DipendenteDbService();
    Gestionale.Data.Control.CorsoDbService corsoService = new Data.Control.CorsoDbService();
}

<div class="row mb-2">
    <div class="col align-self-start">
        <h2>Dipendenti</h2>
    </div>
    <div class="col-3">
        <input id="SearchBar" type="search" class="form-control" placeholder="Cerca...">
    </div>
</div>


@if (ListaPersonale == null || !ListaPersonale.Any())
{
    <p>Non è presente alcun modulo per questo corso. Aggiungine uno premendo il tasto verde.</p>
    <button @onclick='() => { BtnChangedPag("/AddDipendente"); }' class="btn btn-success" title="Aggiungi Dipendente"><b>+</b></button>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr class="table-secondary">
                <th></th>
                <th>Nome</th>
                <th>Cognome</th>
                <th>Categoria</th>
                <th>Corso</th>
                <th></th>
                <th class="text-center" style="width: 1px;"><button @onclick='() => { BtnChangedPag("/AddDipendente"); }' class="btn btn-success" title="Aggiungi un nuovo modulo"><b>+</b></button></th>
            </tr>
        </thead>
        <tbody class="accordion bodySearch" id="boolAccord">
            @foreach (var p in ListaPersonale)
            {
                <tr class="trSearch">
                    <td>
                        <button class="btn btn-danger " data-toggle="modal" data-target="#myModal" @onclick="() => ControlloDelete(p)" title="Elimina @p.Nome"><b>–</b></button> <!-- Aggiungere Funzione -->
                    </td>
                    <td>@p.Nome</td>
                    <td>@p.Cognome</td>
                    <td>@p.Categoria</td>
                    <td>@corsoService.Read(db, p.CorsiId).Result.Nome</td>
                    <td style="text-align:center;">
                        <button @onclick='() => { BtnChangedPag("/AddDipendente/Info/" + p.Id); }' class="btn btn-warning accordion-toggle" title="Info Dipendente">Info</button>
                        <!--<button class="btn btn-warning accordion-toggle" type="button" data-toggle="collapse" data-target="#("e"+p.Id)">Info</button>-->
                    </td>
                    <td>
                        <button @onclick='() => { BtnChangedPag("/AddDipendente/Modifica/" + p.Id); }' class="btn btn-link mr-n2 float-right" title="Modifica"><img src="/css/gear.ico" width="27" height="32" /></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- fine tabella Dipendenti -->


    <!-- Modal Conferma Eliminazione -->
    <div class="modal fade" id="myModal" style="box-shadow: 0px 0px 40px -11px rgba(0,0,0,0.75);" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Gestionale</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class=" modal-body divConferma border">
                    <p><strong>Sei sicuro di voler eliminare @DipDel.Nome @DipDel.Cognome?</strong></p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" title="Annulla" data-dismiss="modal"><b>Annulla</b></button>
                    <button class="btn btn-danger" title="Elimina" @onclick="()=>BtnDelete(DipDel)" data-dismiss="modal"><b>Elimina</b></button>

                </div>
            </div>
        </div>
    </div>
}


@code
{
    private Dipendente[] ListaPersonale;
    private Corso[] ListaCorsi;
    private Dipendente NewDipendente = new Dipendente() { };
    private Dipendente DipDel = new Dipendente() { };
    //private Insegnante NuovoInsegnante = new Insegnante() { };
    //private Tutor NuovoTutor = new Tutor() { };
    //private Coordinatore NuovoCoordinatore = new Coordinatore() { };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("Search");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        ListaPersonale = await db.Dipendente.ToArrayAsync();
        ListaCorsi = await db.Corsi.ToArrayAsync();
    }

    protected async Task BtnDelete(Dipendente d)
    {
        await personaleService.Delete(db, d);
        ListaPersonale = await db.Dipendente.ToArrayAsync();
        StateHasChanged();
    }
    protected void BtnChangedPag(string uri)
    {
        Navigator.NavigateTo(uri, true);
    }


    protected void ControlloDelete(Dipendente d)
    {
        DipDel = d;
    }
}